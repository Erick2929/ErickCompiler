
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL COLON COMMA DECREMENT DIVIDE ELSE EQUAL FALSE FLOAT FOR GREATER GREATER_EQUAL IDENTIFIER IF INCREMENT INT LESS LESS_EQUAL LOGICAL_AND LOGICAL_NOT LOGICAL_OR L_BRACE L_BRACKET L_PAREN MAIN MINUS MODULO NOT NOT_EQUAL OR PLUS PROGRAM RETURN R_BRACE R_BRACKET R_PAREN SEMICOLON STRING TIMES TRUE WHILE WRITE WRITELNprogram : PROGRAM MAIN L_BRACE expressions R_BRACEexpressions : expressions expressionexpressions : expression\n    expression : var_declaration SEMICOLON\n               | write SEMICOLON\n               | writeln SEMICOLON\n               | for_loop\n               | empty\n    write : WRITE L_PAREN statement R_PARENwriteln : WRITELN L_PAREN statement R_PARENstatement : IDENTIFIER\n    statement : statement PLUS statement\n              | statement MINUS statement\n              | statement TIMES statement\n              | statement DIVIDE statement\n              | INT\n              | FLOAT\n              | BOOL\n              | STRING\n    \n    statement : L_PAREN statement R_PAREN\n              | L_PAREN conditional R_PAREN\n    statement : IDENTIFIER INCREMENTstatement : IDENTIFIER DECREMENT\n    conditional : conditional EQUAL conditional\n                | conditional NOT_EQUAL conditional\n                | conditional GREATER conditional\n                | conditional LESS conditional\n                | conditional GREATER_EQUAL conditional\n                | conditional LESS_EQUAL conditional\n                | conditional AND conditional\n                | conditional OR conditional\n                | TRUE\n                | FALSE\n                | statement\n    for_loop : FOR L_PAREN var_declaration SEMICOLON conditional SEMICOLON statement R_PAREN L_BRACE expressions R_BRACEvar_declaration : data_type declarations\n    data_type : INT\n               | FLOAT\n               | BOOL\n               | STRING\n    \n    declarations : IDENTIFIER COMMA declarations\n                 | IDENTIFIER\n    var_declaration : IDENTIFIER ASSIGN statement\n    empty :\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,21,],[0,-1,]),'MAIN':([2,],[3,]),'L_BRACE':([3,83,],[4,84,]),'IDENTIFIER':([4,5,6,10,11,12,17,18,19,20,22,23,24,25,28,29,30,31,32,39,46,47,48,49,56,63,64,65,66,67,68,69,70,81,84,85,86,],[13,13,-3,-7,-8,27,-37,-38,-39,-40,-2,-4,-5,-6,33,33,33,13,27,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,13,13,-35,]),'WRITE':([4,5,6,10,11,22,23,24,25,84,85,86,],[14,14,-3,-7,-8,-2,-4,-5,-6,14,14,-35,]),'WRITELN':([4,5,6,10,11,22,23,24,25,84,85,86,],[15,15,-3,-7,-8,-2,-4,-5,-6,15,15,-35,]),'FOR':([4,5,6,10,11,22,23,24,25,84,85,86,],[16,16,-3,-7,-8,-2,-4,-5,-6,16,16,-35,]),'R_BRACE':([4,5,6,10,11,22,23,24,25,84,85,86,],[-44,21,-3,-7,-8,-2,-4,-5,-6,-44,86,-35,]),'INT':([4,5,6,10,11,22,23,24,25,28,29,30,31,39,46,47,48,49,56,63,64,65,66,67,68,69,70,81,84,85,86,],[17,17,-3,-7,-8,-2,-4,-5,-6,35,35,35,17,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,17,17,-35,]),'FLOAT':([4,5,6,10,11,22,23,24,25,28,29,30,31,39,46,47,48,49,56,63,64,65,66,67,68,69,70,81,84,85,86,],[18,18,-3,-7,-8,-2,-4,-5,-6,36,36,36,18,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,18,18,-35,]),'BOOL':([4,5,6,10,11,22,23,24,25,28,29,30,31,39,46,47,48,49,56,63,64,65,66,67,68,69,70,81,84,85,86,],[19,19,-3,-7,-8,-2,-4,-5,-6,37,37,37,19,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,19,19,-35,]),'STRING':([4,5,6,10,11,22,23,24,25,28,29,30,31,39,46,47,48,49,56,63,64,65,66,67,68,69,70,81,84,85,86,],[20,20,-3,-7,-8,-2,-4,-5,-6,38,38,38,20,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,20,20,-35,]),'SEMICOLON':([7,8,9,26,27,33,34,35,36,37,38,42,43,44,45,52,53,54,55,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[23,24,25,-36,-42,-11,-43,-16,-17,-18,-19,56,-41,-22,-23,-32,-33,-9,-10,-12,-13,-14,-15,-20,-21,81,-34,-24,-25,-26,-27,-28,-29,-30,-31,]),'ASSIGN':([13,],[28,]),'L_PAREN':([14,15,16,28,29,30,39,46,47,48,49,56,63,64,65,66,67,68,69,70,81,],[29,30,31,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'COMMA':([27,],[32,]),'PLUS':([33,34,35,36,37,38,40,41,44,45,50,57,58,59,60,61,62,72,82,],[-11,46,-16,-17,-18,-19,46,46,-22,-23,46,46,46,46,46,-20,-21,46,46,]),'MINUS':([33,34,35,36,37,38,40,41,44,45,50,57,58,59,60,61,62,72,82,],[-11,47,-16,-17,-18,-19,47,47,-22,-23,47,47,47,47,47,-20,-21,47,47,]),'TIMES':([33,34,35,36,37,38,40,41,44,45,50,57,58,59,60,61,62,72,82,],[-11,48,-16,-17,-18,-19,48,48,-22,-23,48,48,48,48,48,-20,-21,48,48,]),'DIVIDE':([33,34,35,36,37,38,40,41,44,45,50,57,58,59,60,61,62,72,82,],[-11,49,-16,-17,-18,-19,49,49,-22,-23,49,49,49,49,49,-20,-21,49,49,]),'R_PAREN':([33,35,36,37,38,40,41,44,45,50,51,52,53,57,58,59,60,61,62,72,73,74,75,76,77,78,79,80,82,],[-11,-16,-17,-18,-19,54,55,-22,-23,61,62,-32,-33,-12,-13,-14,-15,-20,-21,-34,-24,-25,-26,-27,-28,-29,-30,-31,83,]),'EQUAL':([33,35,36,37,38,44,45,50,51,52,53,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[-11,-16,-17,-18,-19,-22,-23,-34,63,-32,-33,-12,-13,-14,-15,-20,-21,63,-34,63,63,63,63,63,63,63,63,]),'NOT_EQUAL':([33,35,36,37,38,44,45,50,51,52,53,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[-11,-16,-17,-18,-19,-22,-23,-34,64,-32,-33,-12,-13,-14,-15,-20,-21,64,-34,64,64,64,64,64,64,64,64,]),'GREATER':([33,35,36,37,38,44,45,50,51,52,53,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[-11,-16,-17,-18,-19,-22,-23,-34,65,-32,-33,-12,-13,-14,-15,-20,-21,65,-34,65,65,65,65,65,65,65,65,]),'LESS':([33,35,36,37,38,44,45,50,51,52,53,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[-11,-16,-17,-18,-19,-22,-23,-34,66,-32,-33,-12,-13,-14,-15,-20,-21,66,-34,66,66,66,66,66,66,66,66,]),'GREATER_EQUAL':([33,35,36,37,38,44,45,50,51,52,53,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[-11,-16,-17,-18,-19,-22,-23,-34,67,-32,-33,-12,-13,-14,-15,-20,-21,67,-34,67,67,67,67,67,67,67,67,]),'LESS_EQUAL':([33,35,36,37,38,44,45,50,51,52,53,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[-11,-16,-17,-18,-19,-22,-23,-34,68,-32,-33,-12,-13,-14,-15,-20,-21,68,-34,68,68,68,68,68,68,68,68,]),'AND':([33,35,36,37,38,44,45,50,51,52,53,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[-11,-16,-17,-18,-19,-22,-23,-34,69,-32,-33,-12,-13,-14,-15,-20,-21,69,-34,69,69,69,69,69,69,69,69,]),'OR':([33,35,36,37,38,44,45,50,51,52,53,57,58,59,60,61,62,71,72,73,74,75,76,77,78,79,80,],[-11,-16,-17,-18,-19,-22,-23,-34,70,-32,-33,-12,-13,-14,-15,-20,-21,70,-34,70,70,70,70,70,70,70,70,]),'INCREMENT':([33,],[44,]),'DECREMENT':([33,],[45,]),'TRUE':([39,56,63,64,65,66,67,68,69,70,],[52,52,52,52,52,52,52,52,52,52,]),'FALSE':([39,56,63,64,65,66,67,68,69,70,],[53,53,53,53,53,53,53,53,53,53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expressions':([4,84,],[5,85,]),'expression':([4,5,84,85,],[6,22,6,22,]),'var_declaration':([4,5,31,84,85,],[7,7,42,7,7,]),'write':([4,5,84,85,],[8,8,8,8,]),'writeln':([4,5,84,85,],[9,9,9,9,]),'for_loop':([4,5,84,85,],[10,10,10,10,]),'empty':([4,5,84,85,],[11,11,11,11,]),'data_type':([4,5,31,84,85,],[12,12,12,12,12,]),'declarations':([12,32,],[26,43,]),'statement':([28,29,30,39,46,47,48,49,56,63,64,65,66,67,68,69,70,81,],[34,40,41,50,57,58,59,60,72,72,72,72,72,72,72,72,72,82,]),'conditional':([39,56,63,64,65,66,67,68,69,70,],[51,71,73,74,75,76,77,78,79,80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM MAIN L_BRACE expressions R_BRACE','program',5,'p_init','yacc.py',12),
  ('expressions -> expressions expression','expressions',2,'p_expressions','yacc.py',21),
  ('expressions -> expression','expressions',1,'p_expressions_expression','yacc.py',27),
  ('expression -> var_declaration SEMICOLON','expression',2,'p_expression','yacc.py',33),
  ('expression -> write SEMICOLON','expression',2,'p_expression','yacc.py',34),
  ('expression -> writeln SEMICOLON','expression',2,'p_expression','yacc.py',35),
  ('expression -> for_loop','expression',1,'p_expression','yacc.py',36),
  ('expression -> empty','expression',1,'p_expression','yacc.py',37),
  ('write -> WRITE L_PAREN statement R_PAREN','write',4,'p_write','yacc.py',46),
  ('writeln -> WRITELN L_PAREN statement R_PAREN','writeln',4,'p_writeln','yacc.py',51),
  ('statement -> IDENTIFIER','statement',1,'p_statement_variable','yacc.py',59),
  ('statement -> statement PLUS statement','statement',3,'p_statement','yacc.py',65),
  ('statement -> statement MINUS statement','statement',3,'p_statement','yacc.py',66),
  ('statement -> statement TIMES statement','statement',3,'p_statement','yacc.py',67),
  ('statement -> statement DIVIDE statement','statement',3,'p_statement','yacc.py',68),
  ('statement -> INT','statement',1,'p_statement','yacc.py',69),
  ('statement -> FLOAT','statement',1,'p_statement','yacc.py',70),
  ('statement -> BOOL','statement',1,'p_statement','yacc.py',71),
  ('statement -> STRING','statement',1,'p_statement','yacc.py',72),
  ('statement -> L_PAREN statement R_PAREN','statement',3,'p_statement_parenthesis','yacc.py',82),
  ('statement -> L_PAREN conditional R_PAREN','statement',3,'p_statement_parenthesis','yacc.py',83),
  ('statement -> IDENTIFIER INCREMENT','statement',2,'p_statement_increment','yacc.py',90),
  ('statement -> IDENTIFIER DECREMENT','statement',2,'p_statement_decrement','yacc.py',96),
  ('conditional -> conditional EQUAL conditional','conditional',3,'p_conditional','yacc.py',103),
  ('conditional -> conditional NOT_EQUAL conditional','conditional',3,'p_conditional','yacc.py',104),
  ('conditional -> conditional GREATER conditional','conditional',3,'p_conditional','yacc.py',105),
  ('conditional -> conditional LESS conditional','conditional',3,'p_conditional','yacc.py',106),
  ('conditional -> conditional GREATER_EQUAL conditional','conditional',3,'p_conditional','yacc.py',107),
  ('conditional -> conditional LESS_EQUAL conditional','conditional',3,'p_conditional','yacc.py',108),
  ('conditional -> conditional AND conditional','conditional',3,'p_conditional','yacc.py',109),
  ('conditional -> conditional OR conditional','conditional',3,'p_conditional','yacc.py',110),
  ('conditional -> TRUE','conditional',1,'p_conditional','yacc.py',111),
  ('conditional -> FALSE','conditional',1,'p_conditional','yacc.py',112),
  ('conditional -> statement','conditional',1,'p_conditional','yacc.py',113),
  ('for_loop -> FOR L_PAREN var_declaration SEMICOLON conditional SEMICOLON statement R_PAREN L_BRACE expressions R_BRACE','for_loop',11,'p_for_loop','yacc.py',125),
  ('var_declaration -> data_type declarations','var_declaration',2,'p_variable_declaration','yacc.py',134),
  ('data_type -> INT','data_type',1,'p_data_type','yacc.py',140),
  ('data_type -> FLOAT','data_type',1,'p_data_type','yacc.py',141),
  ('data_type -> BOOL','data_type',1,'p_data_type','yacc.py',142),
  ('data_type -> STRING','data_type',1,'p_data_type','yacc.py',143),
  ('declarations -> IDENTIFIER COMMA declarations','declarations',3,'p_declarations','yacc.py',150),
  ('declarations -> IDENTIFIER','declarations',1,'p_declarations','yacc.py',151),
  ('var_declaration -> IDENTIFIER ASSIGN statement','var_declaration',3,'p_assignment','yacc.py',162),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',181),
]
